<?php

$env = getenv('ENVIRONMENT');

/**
 * Load database defaults from environment variables
 */
$databases['default']['default'] = [
  'database' =>  getenv('DATABASE_NAME'),
  'username' => getenv('DATABASE_USER'),
  'password' => getenv('DATABASE_PASSWORD'),
  'prefix' => '',
  'host' => getenv('DATABASE_HOST'),
  'port' => getenv('DATABASE_PORT'),
  'namespace' => 'Drupal\\Core\\Database\\Driver\\mysql',
  'driver' => 'mysql',
];

/**
 * Provide support for Azure's MySQL SSL requirements
 */
if (!empty(getenv('DATABASE_SSL_CA'))) {
  $databases['default']['default']['pdo'][PDO::MYSQL_ATTR_SSL_CA] = getenv('DATABASE_SSL_CA');
  $databases['default']['default']['pdo'][PDO::MYSQL_ATTR_SSL_VERIFY_SERVER_CERT] = FALSE;
}

/**
 * Generate salt.txt if required
 */
if (!array_key_exists('hash_salt', $settings) && !file_exists(__DIR__ . '/salt.txt')) {
  file_put_contents(__DIR__ . '/salt.txt', \Drupal\Component\Utility\Crypt::randomBytesBase64(55));
}

if (file_exists(__DIR__ . '/salt.txt')) {
  $settings['hash_salt'] = file_get_contents(__DIR__ . '/salt.txt');
}

$settings['file_public_path'] = 'sites/default/files';
$settings['file_private_path'] = '../private';


/**
 * Prevent update manager from being able to write to the filesystem. All
 * updates should be made through Composer.
 */
$settings['allow_authorize_operations'] = FALSE;

/**
 * Set a default error level based on environment configuration
 */
$config['system.logging']['error_level'] = getenv('ERROR_LEVEL');

/**
 * Fast 404 pages:
 *
 * Drupal can generate fully themed 404 pages. However, some of these responses
 * are for images or other resource files that are not displayed to the user.
 * This can waste bandwidth, and also generate server load.
 *
 * The options below return a simple, fast 404 page for URLs matching a
 * specific pattern:
 * - $config['system.performance']['fast_404']['exclude_paths']: A regular
 *   expression to match paths to exclude, such as images generated by image
 *   styles, or dynamically-resized images. The default pattern provided below
 *   also excludes the private file system. If you need to add more paths, you
 *   can add '|path' to the expression.
 * - $config['system.performance']['fast_404']['paths']: A regular expression to
 *   match paths that should return a simple 404 page, rather than the fully
 *   themed 404 page. If you don't have any aliases ending in htm or html you
 *   can add '|s?html?' to the expression.
 * - $config['system.performance']['fast_404']['html']: The html to return for
 *   simple 404 pages.
 *
 * Remove the leading hash signs if you would like to alter this functionality.
 */
# $config['system.performance']['fast_404']['exclude_paths'] = '/\/(?:styles)|(?:system\/files)\//';
# $config['system.performance']['fast_404']['paths'] = '/\.(?:txt|png|gif|jpe?g|css|js|ico|swf|flv|cgi|bat|pl|dll|exe|asp)$/i';
# $config['system.performance']['fast_404']['html'] = '<!DOCTYPE html><html><head><title>404 Not Found</title></head><body><h1>Not Found</h1><p>The requested URL "@path" was not found on this server.</p></body></html>';

/**
 * Load an environment-specific services file if it exists.
 */
$servicesFile = __DIR__ . '/services.'.$env.'.yml';
if (file_exists($servicesFile)) {
  $settings['container_yamls'][] = $servicesFile;
}

/**
 * Load an environment-specific settings file if it exists.
 */
$settingsFile = __DIR__ . '/settings.'.$env.'.php';
if (file_exists($settingsFile)) {
  include $settingsFile;
}

/**
 * Set sane defaults for the trusted host patterns. Non-production should always
 * allow the current domain.
 */
if (!empty(getenv('HOST_NAME'))) {
  $settings['trusted_host_patterns'][] = '^'.getenv('HOST_NAME').'$';
}
if (!empty(getenv('HOST_NAME_INTERNAL'))) {
  $settings['trusted_host_patterns'][] = '^'.getenv('HOST_NAME_INTERNAL').'$';
}
if (getenv('ENVIRONMENT') !== 'prod' && !empty($_SERVER['HTTP_HOST'])) {
  $settings['trusted_host_patterns'][] = '^'. preg_quote($_SERVER['HTTP_HOST'], '/') .'$';
}

/**
 * The default list of directories that will be ignored by Drupal's file API.
 *
 * By default ignore node_modules and bower_components folders to avoid issues
 * with common frontend tools and recursive scanning of directories looking for
 * extensions.
 *
 * @see \Drupal\Core\File\FileSystemInterface::scanDirectory()
 * @see \Drupal\Core\Extension\ExtensionDiscovery::scanDirectory()
 */
$settings['file_scan_ignore_directories'] = [
  'node_modules',
  'bower_components',
];

/**
 * Temporary file path
 */
if (getenv('TEMP_PATH')) {
  $settings['file_temp_path'] = getenv('TEMP_PATH');
}

/**
 * Get configuration settings
 */
$configSettings = __DIR__ . '/settings.config.php';
if (file_exists($configSettings)) {
  include $configSettings;
}
